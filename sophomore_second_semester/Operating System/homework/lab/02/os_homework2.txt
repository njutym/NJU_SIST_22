选用磁盘：disk2   磁盘原始MBR汇编代码：new3.bin   手搓MBR代码win.bin
asm:C:\Users\86181\Desktop\Program\VscodeData\markdown\newnew.asm


指令:qemu-system-x86_64 -bios D:\MyOwnFiles\qemu\share\bios.bin -drive file=disk2.raw,format=raw -m 2G -smp 2 
dd if=win.bin of=disk2.raw bs=512 count=1
nasm -f bin C:\Users\86181\Desktop\Program\VscodeData\markdown\newnew.asm -o win.bin 
ndisasm win.bin

代码：


; 设置代码段的起始位置
BITS 16
SECTION MBR vstart=0x7c00

; 初始化堆栈(只安装了windows系统的mbr中最前面就是这些指令)
mov ax, cs
mov ds, ax
mov es, ax
mov ss, ax
mov sp, 0x7c00

_start:
    ; 清屏
    mov ax, 0x600
    mov bx, 0x700
    mov cx, 0
    mov dx, 0x184f
    int 10h

    ; 打印引导标签
    mov si, lead_label
    call print
    mov si, windows_label
    call print
    mov si, linux_label
    call print

    ; 输入
    call input

    ; 重新显示标签，也可以写成jmp $原地等待
    jmp _start

_exit:
    ret

; 打印字符串
print:
    lodsb
    or al, al
    jz _exit
    mov ah, 0x0E
    int 10h
    jmp print

; 用户输入
input:
    mov ah, 0
    int 16h
    cmp ah, 0
    je input

    cmp al, '1'
    je select_windows   ;想选windows
    cmp al, '2'
    je select_linux     ;想选linux
    jmp input

; 选择 Windows 分区
select_windows:
    ; 清屏
    mov ax, 0x600
    mov bx, 0x700
    mov cx, 0
    mov dx, 184fh
    int 10h
    ; 等enter
    mov byte [selected_partition], '1'
    mov si, windows_label
    call print
    jmp wait_enter

; 选择 Linux 分区
select_linux:
    ; 清屏
    mov ax, 0x600
    mov bx, 0x700
    mov cx, 0
    mov dx, 184fh
    int 10h
    ; 等enter
    mov byte [selected_partition], '2'
    mov si, linux_label
    call print
    jmp wait_enter

; 进入 Windows
windows_selected:
    ;基本照着只装了windows的原始的MBR来写就行

    ;把MBR从0x7c00移到0x600
    xor ax, ax
    mov ss, ax
    mov sp, 0x7c00          
    mov es, ax
    mov ds, ax
    mov si, 0x7c00
    mov di, 0x600
    mov cx, 0x200
    cld
    rep movsb

    ;这步需要注意将push word后的地址找出来，不是原本的地址，而是这个新写的MBR汇编成的二进制代码再反汇编生成对应的顺序地址(加上0x600偏移量)
    push ax
    push word 0x6A3
    retf
	
    ;我的Windows的加载器在第一个分区的活动扇区，0x7be就是分区表第一个分区的入口，所以不用找了
    ;CHS法
    mov bp, 0x7be
    mov ax, 0x0201
    mov bx, 0x7c00
    mov dl,[bp+0x0]
    mov dh,[bp+0x1]
    mov cl,[bp+0x2]
    mov ch,[bp+0x3]
    int 0x13

    jmp 0x0000:0x7c00

; 进入 Linux
linux_selected:
    ;大多数指令来自原汇编代码
    
    mov dl, 0x80;必要语句

    ;LBA法,读到0x7000
    xor ax,ax
    mov [si+0x4],ax
    inc ax
    mov [si-0x1],al
    mov [si+0x2],ax
    mov word [si],0x10
    mov ebx,0x00000001  ;linux二阶段在1号扇区
    mov [si+0x8],ebx
    mov ebx,0x00000000
    mov [si+0xc],ebx
    mov word [si+0x6],0x7000
    mov ah,0x42
    int 0x13

    ;将start从0x7000移动到0x8000启动
    mov bx,0x7000
    mov es,bx
    xor bx,bx
    mov ax,0x201
    int 0x13
    mov bx,es
    pusha
    push ds
    mov cx,0x100
    mov ds,bx
    xor si,si
    mov di,0x8000
    mov es,si
    cld
    rep movsw
    pop ds
    popa
    jmp 0x8000
    
; 等待用户按下 Enter 键
wait_enter:
    mov ah, 0
    int 16h
    cmp al, 0x0D    ; Enter 键的 ASCII 码为 0x0D
    je execute_selected_partition
    ;使用户可以切换1，2
    cmp al,'1'  
    je select_windows
    cmp al,'2'
    je select_linux
    jmp wait_enter

; 执行用户选择的分区
execute_selected_partition:
    cmp byte [selected_partition], '1'
    je windows_selected
    cmp byte [selected_partition], '2'
    je linux_selected
    jmp _start

; 定义字符串
lead_label db "press 1 for windows, 2 for linux", 0x0D,0x0A,0
windows_label db "1. windows ", 0x0D,0x0A,0
linux_label   db "2. linux ", 0x0D,0x0A,0
selected_partition db 0 ;可在这里修改默认选择的分区


 

win以及双系统汇编代码(win)
00000000  33C0              xor ax,ax
00000002  8ED0              mov ss,ax
00000004  BC007C            mov sp,0x7c00
00000007  8EC0              mov es,ax
00000009  8ED8              mov ds,ax
0000000B  BE007C            mov si,0x7c00
0000000E  BF0006            mov di,0x600
00000011  B90002            mov cx,0x200
00000014  FC                cld
00000015  F3A4              rep movsb
00000017  50                push ax
00000018  681C06            push word 0x61c
0000001B  CB                retf
0000001C  FB                sti
0000001D  B90400            mov cx,0x4
00000020  BDBE07            mov bp,0x7be
00000023  807E0000          cmp byte [bp+0x0],0x0
00000027  7C0B              jl 0x34
00000029  0F850E01          jnz near 0x13b
0000002D  83C510            add bp,byte +0x10
00000030  E2F1              loop 0x23
00000032  CD18              int 0x18
00000034  885600            mov [bp+0x0],dl
00000037  55                push bp
00000038  C6461105          mov byte [bp+0x11],0x5
0000003C  C6461000          mov byte [bp+0x10],0x0
00000040  B441              mov ah,0x41
00000042  BBAA55            mov bx,0x55aa
00000045  CD13              int 0x13
00000047  5D                pop bp
00000048  720F              jc 0x59
0000004A  81FB55AA          cmp bx,0xaa55
0000004E  7509              jnz 0x59
00000050  F7C10100          test cx,0x1
00000054  7403              jz 0x59
00000056  FE4610            inc byte [bp+0x10]
00000059  6660              pushad
0000005B  807E1000          cmp byte [bp+0x10],0x0
0000005F  7426              jz 0x87
00000061  666800000000      push dword 0x0
00000067  66FF7608          push dword [bp+0x8]
0000006B  680000            push word 0x0
0000006E  68007C            push word 0x7c00
00000071  680100            push word 0x1
00000074  681000            push word 0x10
00000077  B442              mov ah,0x42
00000079  8A5600            mov dl,[bp+0x0]
0000007C  8BF4              mov si,sp
0000007E  CD13              int 0x13
00000080  9F                lahf
00000081  83C410            add sp,byte +0x10
00000084  9E                sahf
00000085  EB14              jmp short 0x9b
00000087  B80102            mov ax,0x201
0000008A  BB007C            mov bx,0x7c00
0000008D  8A5600            mov dl,[bp+0x0]
00000090  8A7601            mov dh,[bp+0x1]
00000093  8A4E02            mov cl,[bp+0x2]
00000096  8A6E03            mov ch,[bp+0x3]
00000099  CD13              int 0x13
0000009B  6661              popad
0000009D  731C              jnc 0xbb
0000009F  FE4E11            dec byte [bp+0x11]
000000A2  750C              jnz 0xb0
000000A4  807E0080          cmp byte [bp+0x0],0x80
000000A8  0F848A00          jz near 0x136
000000AC  B280              mov dl,0x80
000000AE  EB84              jmp short 0x34
000000B0  55                push bp
000000B1  32E4              xor ah,ah
000000B3  8A5600            mov dl,[bp+0x0]
000000B6  CD13              int 0x13
000000B8  5D                pop bp
000000B9  EB9E              jmp short 0x59
000000BB  813EFE7D55AA      cmp word [0x7dfe],0xaa55
000000C1  756E              jnz 0x131
000000C3  FF7600            push word [bp+0x0]
000000C6  E88D00            call 0x156
000000C9  7517              jnz 0xe2
000000CB  FA                cli
000000CC  B0D1              mov al,0xd1
000000CE  E664              out 0x64,al
000000D0  E88300            call 0x156
000000D3  B0DF              mov al,0xdf
000000D5  E660              out 0x60,al
000000D7  E87C00            call 0x156
000000DA  B0FF              mov al,0xff
000000DC  E664              out 0x64,al
000000DE  E87500            call 0x156
000000E1  FB                sti
000000E2  B800BB            mov ax,0xbb00
000000E5  CD1A              int 0x1a
000000E7  6623C0            and eax,eax
000000EA  753B              jnz 0x127
000000EC  6681FB54435041    cmp ebx,0x41504354
000000F3  7532              jnz 0x127
000000F5  81F90201          cmp cx,0x102
000000F9  722C              jc 0x127
000000FB  666807BB0000      push dword 0xbb07
00000101  666800020000      push dword 0x200
00000107  666808000000      push dword 0x8
0000010D  6653              push ebx
0000010F  6653              push ebx
00000111  6655              push ebp
00000113  666800000000      push dword 0x0
00000119  6668007C0000      push dword 0x7c00
0000011F  6661              popad
00000121  680000            push word 0x0
00000124  07                pop es
00000125  CD1A              int 0x1a
00000127  5A                pop dx
00000128  32F6              xor dh,dh
0000012A  EA007C0000        jmp 0x0:0x7c00
0000012F  CD18              int 0x18
00000131  A0B707            mov al,[0x7b7]
00000134  EB08              jmp short 0x13e
00000136  A0B607            mov al,[0x7b6]
00000139  EB03              jmp short 0x13e
0000013B  A0B507            mov al,[0x7b5]
0000013E  32E4              xor ah,ah
00000140  050007            add ax,0x700
00000143  8BF0              mov si,ax
00000145  AC                lodsb
00000146  3C00              cmp al,0x0
00000148  7409              jz 0x153
0000014A  BB0700            mov bx,0x7
0000014D  B40E              mov ah,0xe
0000014F  CD10              int 0x10
00000151  EBF2              jmp short 0x145
00000153  F4                hlt
00000154  EBFD              jmp short 0x153
00000156  2BC9              sub cx,cx
00000158  E464              in al,0x64
0000015A  EB00              jmp short 0x15c
0000015C  2402              and al,0x2
0000015E  E0F8              loopne 0x158
00000160  2402              and al,0x2
00000162  C3                ret
00000163  49                dec cx
00000164  6E                outsb
00000165  7661              jna 0x1c8
00000167  6C                insb
00000168  6964207061        imul sp,[si+0x20],word 0x6170
0000016D  7274              jc 0x1e3
0000016F  6974696F6E        imul si,[si+0x69],word 0x6e6f
00000174  207461            and [si+0x61],dh
00000177  626C65            bound bp,[si+0x65]
0000017A  004572            add [di+0x72],al
0000017D  726F              jc 0x1ee
0000017F  7220              jc 0x1a1
00000181  6C                insb
00000182  6F                outsw
00000183  61                popa
00000184  64696E67206F      imul bp,[fs:bp+0x67],word 0x6f20
0000018A  7065              jo 0x1f1
0000018C  7261              jc 0x1ef
0000018E  7469              jz 0x1f9
00000190  6E                outsb
00000191  67207379          and [ebx+0x79],dh
00000195  7374              jnc 0x20b
00000197  656D              gs insw
00000199  004D69            add [di+0x69],cl
0000019C  7373              jnc 0x211
0000019E  696E67206F        imul bp,[bp+0x67],word 0x6f20
000001A3  7065              jo 0x20a
000001A5  7261              jc 0x208
000001A7  7469              jz 0x212
000001A9  6E                outsb
000001AA  67207379          and [ebx+0x79],dh
000001AE  7374              jnc 0x224
000001B0  656D              gs insw
000001B2  0000              add [bx+si],al
000001B4  00637B            add [bp+di+0x7b],ah
000001B7  9A38B5A7DB        call 0xdba7:0xb538
000001BC  0000              add [bx+si],al
000001BE  802021            and byte [bx+si],0x21
000001C1  0007              add [bx],al
000001C3  DF13              fist word [bp+di]
000001C5  0C00              or al,0x0
000001C7  0800              or [bx+si],al
000001C9  0000              add [bx+si],al
000001CB  2003              and [bp+di],al
000001CD  0000              add [bx+si],al
000001CF  DF14              fist word [si]
000001D1  0C07              or al,0x7
000001D3  FE                db 0xfe
000001D4  FF                db 0xff
000001D5  FF00              inc word [bx+si]
000001D7  2803              sub [bp+di],al
000001D9  0000              add [bx+si],al
000001DB  D0DC              rcr ah,1
000001DD  06                push es
000001DE  0000              add [bx+si],al
000001E0  0000              add [bx+si],al
000001E2  0000              add [bx+si],al
000001E4  0000              add [bx+si],al
000001E6  0000              add [bx+si],al
000001E8  0000              add [bx+si],al
000001EA  0000              add [bx+si],al
000001EC  0000              add [bx+si],al
000001EE  0000              add [bx+si],al
000001F0  0000              add [bx+si],al
000001F2  0000              add [bx+si],al
000001F4  0000              add [bx+si],al
000001F6  0000              add [bx+si],al
000001F8  0000              add [bx+si],al
000001FA  0000              add [bx+si],al
000001FC  0000              add [bx+si],al
000001FE  55                push bp
000001FF  AA                stosb


win以及双系统汇编代码(双系统)
00000000  EB63              jmp short 0x65
00000002  90                nop
00000003  D88EC08E          fmul dword [bp-0x7140]
00000007  D0BC007C          sar byte [si+0x7c00],1
0000000B  B80006            mov ax,0x600
0000000E  BB0007            mov bx,0x700
00000011  B90000            mov cx,0x0
00000014  BA4F18            mov dx,0x184f
00000017  CD10              int 0x10
00000019  BEE37C            mov si,0x7ce3
0000001C  E8B800            call 0xd7
0000001F  BEEF7C            mov si,0x7cef
00000022  E8B200            call 0xd7
00000025  E80200            call 0x2a
00000028  EBE1              jmp short 0xb
0000002A  B400              mov ah,0x0
0000002C  CD16              int 0x16
0000002E  80FC00            cmp ah,0x0
00000031  74F7              jz 0x2a
00000033  3C31              cmp al,0x31
00000035  7406              jz 0x3d
00000037  3C32              cmp al,0x32
00000039  743B              jz 0x76
0000003B  EBED              jmp short 0x2a
0000003D  31C0              xor ax,ax
0000003F  8ED0              mov ss,ax
00000041  BC007C            mov sp,0x7c00
00000044  8EC0              mov es,ax
00000046  8ED8              mov ds,ax
00000048  BE007C            mov si,0x7c00
0000004B  BF0006            mov di,0x600
0000004E  B90002            mov cx,0x200
00000051  FC                cld
00000052  F3A4              rep movsb
00000054  50                push ax
00000055  681C06            push word 0x61c
00000058  CB                retf
00000059  FB                sti
0000005A  00800100          add [bx+si+0x1],al
0000005E  0000              add [bx+si],al
00000060  0000              add [bx+si],al
00000062  0000              add [bx+si],al
00000064  FF                db 0xff
00000065  FA                cli
00000066  90                nop
00000067  90                nop
00000068  F6C280            test dl,0x80
0000006B  7405              jz 0x72
0000006D  F6C270            test dl,0x70
00000070  7402              jz 0x74
00000072  B280              mov dl,0x80
00000074  EA797C0000        jmp 0x0:0x7c79
00000079  31C0              xor ax,ax
0000007B  8ED8              mov ds,ax
0000007D  8ED0              mov ss,ax
0000007F  BC0020            mov sp,0x2000
00000082  FB                sti
00000083  A0647C            mov al,[0x7c64]
00000086  3CFF              cmp al,0xff
00000088  7402              jz 0x8c
0000008A  88C2              mov dl,al
0000008C  52                push dx
0000008D  BB1704            mov bx,0x417
00000090  F60703            test byte [bx],0x3
00000093  7406              jz 0x9b
00000095  BE887D            mov si,0x7d88
00000098  E81701            call 0x1b2
0000009B  BE057C            mov si,0x7c05
0000009E  B441              mov ah,0x41
000000A0  BBAA55            mov bx,0x55aa
000000A3  CD13              int 0x13
000000A5  5A                pop dx
000000A6  52                push dx
000000A7  723D              jc 0xe6
000000A9  81FB55AA          cmp bx,0xaa55
000000AD  7537              jnz 0xe6
000000AF  83E101            and cx,byte +0x1
000000B2  7432              jz 0xe6
000000B4  31C0              xor ax,ax
000000B6  894404            mov [si+0x4],ax
000000B9  40                inc ax
000000BA  8844FF            mov [si-0x1],al
000000BD  894402            mov [si+0x2],ax
000000C0  C7041000          mov word [si],0x10
000000C4  668B1E5C7C        mov ebx,[0x7c5c]
000000C9  66895C08          mov [si+0x8],ebx
000000CD  668B1E607C        mov ebx,[0x7c60]
000000D2  66895C0C          mov [si+0xc],ebx
000000D6  C744060070        mov word [si+0x6],0x7000
000000DB  B442              mov ah,0x42
000000DD  CD13              int 0x13
000000DF  7205              jc 0xe6
000000E1  BB0070            mov bx,0x7000
000000E4  EB76              jmp short 0x15c
000000E6  B408              mov ah,0x8
000000E8  CD13              int 0x13
000000EA  730D              jnc 0xf9
000000EC  5A                pop dx
000000ED  84D2              test dl,dl
000000EF  0F83D000          jnc near 0x1c3
000000F3  BE937D            mov si,0x7d93
000000F6  E98200            jmp 0x17b
000000F9  660FB6C6          movzx eax,dh
000000FD  8864FF            mov [si-0x1],ah
00000100  40                inc ax
00000101  66894404          mov [si+0x4],eax
00000105  0FB6D1            movzx dx,cl
00000108  C1E202            shl dx,byte 0x2
0000010B  88E8              mov al,ch
0000010D  88F4              mov ah,dh
0000010F  40                inc ax
00000110  894408            mov [si+0x8],ax
00000113  0FB6C2            movzx ax,dl
00000116  C0E802            shr al,byte 0x2
00000119  668904            mov [si],eax
0000011C  66A1607C          mov eax,[0x7c60]
00000120  6609C0            or eax,eax
00000123  754E              jnz 0x173
00000125  66A15C7C          mov eax,[0x7c5c]
00000129  6631D2            xor edx,edx
0000012C  66F734            div dword [si]
0000012F  88D1              mov cl,dl
00000131  31D2              xor dx,dx
00000133  66F77404          div dword [si+0x4]
00000137  3B4408            cmp ax,[si+0x8]
0000013A  7D37              jnl 0x173
0000013C  FEC1              inc cl
0000013E  88C5              mov ch,al
00000140  30C0              xor al,al
00000142  C1E802            shr ax,byte 0x2
00000145  08C1              or cl,al
00000147  88D0              mov al,dl
00000149  5A                pop dx
0000014A  88C6              mov dh,al
0000014C  BB0070            mov bx,0x7000
0000014F  8EC3              mov es,bx
00000151  31DB              xor bx,bx
00000153  B80102            mov ax,0x201
00000156  CD13              int 0x13
00000158  721E              jc 0x178
0000015A  8CC3              mov bx,es
0000015C  60                pusha
0000015D  1E                push ds
0000015E  B90001            mov cx,0x100
00000161  8EDB              mov ds,bx
00000163  31F6              xor si,si
00000165  BF0080            mov di,0x8000
00000168  8EC6              mov es,si
0000016A  FC                cld
0000016B  F3A5              rep movsw
0000016D  1F                pop ds
0000016E  61                popa
0000016F  FF265A7C          jmp [0x7c5a]
00000173  BE8E7D            mov si,0x7d8e
00000176  EB03              jmp short 0x17b
00000178  BE9D7D            mov si,0x7d9d
0000017B  E83400            call 0x1b2
0000017E  BEA27D            mov si,0x7da2
00000181  E82E00            call 0x1b2
00000184  CD18              int 0x18
00000186  EBFE              jmp short 0x186
00000188  47                inc di
00000189  52                push dx
0000018A  55                push bp
0000018B  42                inc dx
0000018C  2000              and [bx+si],al
0000018E  47                inc di
0000018F  656F              gs outsw
00000191  6D                insw
00000192  004861            add [bx+si+0x61],cl
00000195  7264              jc 0x1fb
00000197  204469            and [si+0x69],al
0000019A  736B              jnc 0x207
0000019C  005265            add [bp+si+0x65],dl
0000019F  61                popa
000001A0  640020            add [fs:bx+si],ah
000001A3  45                inc bp
000001A4  7272              jc 0x218
000001A6  6F                outsw
000001A7  720D              jc 0x1b6
000001A9  0A00              or al,[bx+si]
000001AB  BB0100            mov bx,0x1
000001AE  B40E              mov ah,0xe
000001B0  CD10              int 0x10
000001B2  AC                lodsb
000001B3  3C00              cmp al,0x0
000001B5  75F4              jnz 0x1ab
000001B7  C3                ret
000001B8  38B5A7DB          cmp [di-0x2459],dh
000001BC  0000              add [bx+si],al
000001BE  802021            and byte [bx+si],0x21
000001C1  0007              add [bx],al
000001C3  DF13              fist word [bp+di]
000001C5  0C00              or al,0x0
000001C7  0800              or [bx+si],al
000001C9  0000              add [bx+si],al
000001CB  2003              and [bp+di],al
000001CD  0000              add [bx+si],al
000001CF  DF14              fist word [si]
000001D1  0C07              or al,0x7
000001D3  FE                db 0xfe
000001D4  FF                db 0xff
000001D5  FF00              inc word [bx+si]
000001D7  2803              sub [bp+di],al
000001D9  00D5              add ch,dl
000001DB  A5                movsw
000001DC  EE                out dx,al
000001DD  0300              add ax,[bx+si]
000001DF  FE                db 0xfe
000001E0  FF                db 0xff
000001E1  FF0B              dec word [bp+di]
000001E3  FE                db 0xfe
000001E4  FF                db 0xff
000001E5  FF00              inc word [bx+si]
000001E7  D0                db 0xd0
000001E8  F1                int1
000001E9  0300              add ax,[bx+si]
000001EB  0810              or [bx+si],dl
000001ED  0000              add [bx+si],al
000001EF  FE                db 0xfe
000001F0  FF                db 0xff
000001F1  FF05              inc word [di]
000001F3  FE                db 0xfe
000001F4  FF                db 0xff
000001F5  FF                db 0xff
000001F6  FE                db 0xfe
000001F7  DF01              fild word [bx+di]
000001F9  0402              add al,0x2
000001FB  18DE              sbb dh,bl
000001FD  0255AA            add dl,[di-0x56]